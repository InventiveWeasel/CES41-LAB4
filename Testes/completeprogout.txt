program AnaliseDeTexto;

var
    char nomes[50][10], palavra[10];
    int i, ntab, posic, nocorr[50];
    char c;
    logic fim;
function int Procura(int k);
var
    int i, inf, sup, med, posic, compara;
    logic achou, fimteste;
{
    achou = false;
    inf = 1;
    sup = ntab;
    while(!achou && sup >= inf)
    {
        med = (inf + sup) / 2;
        compara = 0;
        fimteste = false;
        for(i = 0; !fimteste && compara == 0; i = i + 1)
        {
            if(palavra[i] < nomes[med][i])
                compara = ~1;
            else
                if(palavra[i] > nomes[med][i])
                    compara = 1;
            if(palavra[i] == '\0' || nomes[med][i] == '\0')
                fimteste = true;
        }
        if(compara == 0)
            achou = true;
        else
            if(compara < 0)
                sup = med - 1;
            else
                inf = med + 1;
    }
    if(achou)
        posic = med;
    else
        posic = ~inf;
    return posic;
}
procedure Inserir(logic k);
var
    int i, j;
    logic fim;
{
    ntab = ntab + 1;
    for(i = ntab; i >= posic + 1; i = i - 1)
    {
        fim = false;
        for(j = 0; !fim; j = j + 1)
        {
            nomes[i][j] = nomes[i - 1][j];
            if(nomes[i][j] == '\0')
                fim = true;
        }
        nocorr[i] = nocorr[i - 1];
    }
    fim = false;
    for(j = 0; !fim; j = j + 1)
    {
        nomes[posic][j] = palavra[j];
        if(palavra[j] == '\0')
            fim = true;
    }
    nocorr[posic] = 1;
}
procedure ExibirTabela();
var
    int i, j;
    logic fim;
{
    write("          ", "Palavra             ", "   Num. de ocorr.");
    for(i = 1; i <= 50; i = i + 1)
    write("-");
    for(i = 1; i <= ntab; i = i + 1)
    {
        write("\n          ");
        fim = false;
        for(j = 0; !fim; j = j + 1)
        {
            if(nomes[i][j] == '\0')
                fim = true;
            else
                write(nomes[i][j]);
        }
        write(" | ", nocorr[i]);
    }
}
{
    ntab = 0;
    write("Nova palavra? (s/n): ");
    read(c);
    while(c == 's' || c == 'S')
    {
        write("\nDigite a palavra: ");
        fim = false;
        for(i = 0; !fim; i = i + 1)
        {
            read(palavra[i]);
            if(palavra[i] == '\n')
                {
                    fim = true;
                    palavra[i] = '\0';
                }
        }
        posic = Procura(43 % 10);
        if(posic > 0)
            nocorr[posic] = nocorr[posic] + 1;
        else
            call Inserir(true);
        write("\n\nNova palavra? (s/n): ");
        read(c);
    }
    call ExibirTabela();
}
c do escopo AnaliseDeTexto nao inicializado


   TABELA  DE  SIMBOLOS:

Classe 0:
  ExibirTabela(IDPROC NAOVAR), escopo: AnaliseDeTexto
	Variaveis:  fim(LOGICO) j(INTEIRO) i(INTEIRO)

Classe 3:
  compara(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

Classe 7:
  c(IDVAR CARACTERE), escopo: AnaliseDeTexto
	Inicializado: 0, Referenciado: 1

  ntab(IDVAR INTEIRO), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1

  palavra(IDVAR CARACTERE), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1
	Array: (1 dimensoes): 10

Classe 11:
  med(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

Classe 13:
  i(IDVAR INTEIRO), escopo: ExibirTabela
	Inicializado: 1, Referenciado: 1

  i(IDVAR INTEIRO), escopo: Inserir
	Inicializado: 1, Referenciado: 1

  posic(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

  i(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

  posic(IDVAR INTEIRO), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1

  i(IDVAR INTEIRO), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1

Classe 14:
  j(IDVAR INTEIRO), escopo: ExibirTabela
	Inicializado: 1, Referenciado: 1

  j(IDVAR INTEIRO), escopo: Inserir
	Inicializado: 1, Referenciado: 1

  fimteste(IDVAR LOGICO), escopo: Procura
	Inicializado: 1, Referenciado: 1

Classe 15:
  k(IDVAR LOGICO), escopo: Inserir
	Inicializado: 1, Referenciado: 1

  k(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

  nocorr(IDVAR INTEIRO), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1
	Array: (1 dimensoes): 50

Classe 17:
  fim(IDVAR LOGICO), escopo: ExibirTabela
	Inicializado: 1, Referenciado: 1

  fim(IDVAR LOGICO), escopo: Inserir
	Inicializado: 1, Referenciado: 1

  fim(IDVAR LOGICO), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1

  nomes(IDVAR CARACTERE), escopo: AnaliseDeTexto
	Inicializado: 1, Referenciado: 1
	Array: (2 dimensoes): 50 10

Classe 18:
  inf(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

Classe 19:
  Inserir(IDPROC NAOVAR), escopo: AnaliseDeTexto
	Parametros (1):  k(LOGICO)
	Variaveis:  fim(LOGICO) j(INTEIRO) i(INTEIRO)

  Procura(IDFUNC INTEIRO), escopo: AnaliseDeTexto
	Parametros (1):  k(INTEIRO)
	Variaveis:  fimteste(LOGICO) achou(LOGICO) compara(INTEIRO) posic(INTEIRO) med(INTEIRO) sup(INTEIRO) inf(INTEIRO) i(INTEIRO)

Classe 22:
  achou(IDVAR LOGICO), escopo: Procura
	Inicializado: 1, Referenciado: 1

  sup(IDVAR INTEIRO), escopo: Procura
	Inicializado: 1, Referenciado: 1

  AnaliseDeTexto(IDPROG NAOVAR), escopo: null
	Funcoes:  ExibirTabela(NAOVAR) Inserir(NAOVAR) Procura(INTEIRO)
	Variaveis:  fim(LOGICO) c(CARACTERE) nocorr(INTEIRO) posic(INTEIRO) ntab(INTEIRO) i(INTEIRO) palavra(CARACTERE) nomes(CARACTERE)

